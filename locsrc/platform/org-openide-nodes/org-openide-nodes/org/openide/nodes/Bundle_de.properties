# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# manifest
OpenIDE-Module-Name=Knoten-API
OpenIDE-Module-Display-Category=Infrastruktur
OpenIDE-Module-Short-Description=API zur Definition generischer baumartiger Strukturen.
OpenIDE-Module-Long-Description=Stellt eine Abstraktion baumartiger Strukturen durch Definition eines Knotens bereit: die generische erweiterbare Schnittstelle, die dann von der Explorer-API angezeigt werden kann.



#Sheet
Properties=Eigenschaften
Expert=Expert
HINT_Properties=Eigenschaften dieses Objekts.
HINT_Expert=Expert-Eigenschaften dieses Objekts.

#indexed customizer
LAB_order=Reihenfolge \u00e4ndern
LAB_listOrder=Diese Felder in diesem Ordner anzeigen:

Button_close=Schlie\u00dfen

Button_up=Nach oben verschieben

Button_down=Nach unten verschieben








#PropertySupport
CTL_StandardName=Name
CTL_StandardHint=Name des Objekts.

# Flavors defined in NodeTransfer

LBL_nodePasteFlavor=Knoten einf\u00fcgen

# Flavor for DdD in Indexed customizer
IndexedFlavor=Index kopieren

# Mime type for transferring nodes
# NO LONGER USED?
# NodeMimeTypeCut=application/x-java-openide-nodecut;class=java.io.InputStream
# NodeMimeTypeCopy=application/x-java-openide-nodecopy;class=java.io.InputStream
# FMT_nodeCopyFlavor=Copy node
# FMT_nodeCutFlavor=Cut node

# commented, not functional with DnD (we should find out why)
# NodeMimeTypeCut=application/x-java-openide-nodecut;class=org.openide.nodes.NodeTransfer$Cut
# NodeMimeTypeCopy=application/x-java-openide-nodecopy;class=org.openide.nodes.NodeTransfer$Copy
# NodeMimeTypePaste=application/x-java-openide-nodepaste;class=org.openide.nodes.NodeTransfer$Paste
#AsynchChildren
LBL_WAIT=Bitte warten...

