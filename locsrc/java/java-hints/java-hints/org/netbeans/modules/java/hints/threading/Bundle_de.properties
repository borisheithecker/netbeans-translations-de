# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

DN_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Aufruf von Condition.notify()
DESC_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Der Aufruf von "notify" oder "notifyAll" von java.util.concurrent.locks.Condition sollte durch "signal" oder "signalAll" ersetzt werden.
#{0}: method name:
ERR_NotifyOnCondition=Aufruf {0} von Condition.notify()
FIX_NotifyOnConditionFix=Durch Aufruf von {0} ersetzen

DN_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Aufruf von Condition.wait()
DESC_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Der Aufruf von "notify" oder "notifyAll" von java.util.concurrent.locks.Condition ist wahrscheinlich nicht beabsichtigt.
ERR_WaitOnCondition=Aufruf von "wait" von java.util.concurrent.locks.Condition

DN_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Aufruf von Thread.run()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Der Aufruf von Thread.run() sollte besser durch den Aufruf von start() ersetzt werden
ERR_ThreadRun=Aufruf von run() aus java.lang.Thread
FIX_ThreadRun=Durch "Thread.start" ersetzen

DN_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Threadstart im Konstruktor
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Das Starten eines Threads im Konstruktor ist gef\u00e4hrlich und sollte vermieden werden.
ERR_ThreadStartInConstructor=Threadstart im Konstruktor

DN_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Aufruf von Thread.yield()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Der Aufruf der Methode yield() von java.lang.Thread versteckt normalerweise Synchronisationsprobleme und sollte daher vermieden werden.
ERR_ThreadYield=Aufruf der Methode yield() von java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Aufruf von Thread.stop()/suspend()/resume()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Die Methoden stop(), suspend() und resume() in java.lang.Thread sind gef\u00e4hrlich und sollten vermieden werden.
#{0}: method name (stop, suspend, resume):
ERR_ThreadSuspend=Aufruf von {0} in java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Verschachtelung synchronisierter Bl\u00f6cke
DESC_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Die Verschachtelung von synchronisierten Bl\u00f6cken ist nutzlos (wenn sie auf dem gleichen Objekt erfolgt) oder gef\u00e4hrlich.
ERR_NestedSynchronized=Verschachtelung synchronisierter Bl\u00f6cke

DN_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Leerer synchronisierter Block
DESC_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Ein leerer synchronisierter Block ist normalerweise nutzlos
ERR_EmptySynchronized=Leerer synchronisierter Block

DN_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Synchronisierung auf Sperre
DESC_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Die Synchronisierung auf java.util.concurrent.locks.Lock ist normalerweise nicht gewollt und sollte durch Lock.lock()-Lock.unlock() ersetzt werden
ERR_SynchronizedOnLock=Synchronisierung auf java.util.concurrent.locks.Lock
FIX_SynchronizedOnLock=Ersetzen durch Lock.lock()-Lock.unlock()

DN_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Arrayfeld ist "volatile"
DESC_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Findet Deklarationen von Arrays als Felder, die "volatile" sind.
ERR_VolatileArrayField=Arrayfeld ist "volatile"

DN_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Sperre wird in finally nicht aufgehoben
DESC_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Findet Vorkommen von Lock.lock()-Lock.unlock(), die nicht korrekt in try-finally eingebettet sind.
ERR_UnlockOutsideTryFinally=Lock.lock() wird in finally nicht entsperrt
FIX_UnlockOutsideTryFinally=In try-finally einbetten

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=Aufruf von .wait au\u00dferhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=Aufruf von .wait au\u00dferhalb der Synchronisation
ERR_UnsyncedWait=Aufruf von Object.wait au\u00dferhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=Aufruf von .wait au\u00dferhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=Aufruf von .wait au\u00dferhalb der Synchronisation
ERR_UnsyncedNotify=Aufruf von Object.notify au\u00dferhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Thread.sleep innerhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Aufruf von Thread.sleep innerhalb der Synchronisation kann zu Performanceproblemen f\u00fchren
ERR_SleepInSync=Aufruf von Thread.sleep innerhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Thread.sleep in Schleife
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Der Aufruf von Thread.sleep in einer Schleife kann Performanceprobleme verursachen.
ERR_SleepInLoop=Aufruf von Thread.sleep in Schleife



