# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
DN_org.netbeans.modules.java.hints.jdk.ThrowableInitCause=Unn\u00f6tiges Throwable.initCause
DESC_org.netbeans.modules.java.hints.jdk.ThrowableInitCause=Findet Aufrufe von Throwable.initCause(), die durch einfache Konstruktor-Aufrufe ersetzt werden k\u00f6nnen. Wenn "Ergebnis von "getMessage()" immer behalten" nicht gesetzt ist, wird <code>(IllegalStateException) new IllegalStateException().initCause(ex)</code> zu <code>new IllegalStateException(ex)</code> umgeschrieben, was den Wert von getMessage() \u00e4ndert. Wenn die Markierung gesetzt ist, wird der Code zu <code>new IllegalStateException(null, ex)</code>. \u00c4hnliche Regeln gelten zum Erzeugen der Exception aus <code>getMessage()</code> oder <code>getLocalizedMessage()</code> aus der Ursache.
FIX_ThrowableInitCause=Konstruktor der Exception verwenden
ERR_ThrowableInitCause=Unn\u00f6tige Nutzung von Throwable.initCause
DN_ThrowableInitCauseStrict=Ergebnis von "getMessage()" immer behalten
LBL_ConvertToSwitch_AlsoEq=Auch Zeichenkettenvergleich mit dem == Operator ber\u00fccksichtigen
TP_ConvertToSwitch_AlsoEq=Legt fest, ob der Zeichenkettenvergleich mit "==" als echter Zeichenkettenvergleich angesehen werden soll.
TP_ThrowableInitCauseStrict=Ergebnis von "getMessage()" immer behalten

DN_org.netbeans.modules.java.hints.jdk.ConvertToStringSwitch="switch" auf Strings anwenden, wenn m\u00f6glich
DESC_org.netbeans.modules.java.hints.jdk.ConvertToStringSwitch=Markiert Kaskaden von "if"-Anweisungen, die zu "switch"-Anweisungen auf Strings gewandelt werden k\u00f6nnen.
ERR_ConvertToStringSwitch=Zu "switch" auf Strings \u00e4ndern
FIX_ConvertToStringSwitch=Zu "switch" auf Strings \u00e4ndern

DN_org.netbeans.modules.java.hints.jdk.JoinCatches=Catch-Bl\u00f6cke durch Multicatch zusammenf\u00fchren
DESC_org.netbeans.modules.java.hints.jdk.JoinCatches=Catch-Bl\u00f6cke durch Multicatch zusammenf\u00fchren
ERR_JoinCatches=Kann durch Multicatch ersetzt werden
FIX_JoinCatches=Durch Multicatch ersetzen

DN_org.netbeans.modules.java.hints.jdk.UseSpecificCatch=Speziellen catch verwenden
DESC_org.netbeans.modules.java.hints.jdk.UseSpecificCatch=Konvertiert catch-Bl\u00f6cke (Throwable oder Exception) zu einem Multicatch-Block, welcher die Exceptions der try-Bl\u00f6cke abf\u00e4ngt.
ERR_UseSpecificCatch=Kann durch multicatch mit spezifischen Exceptions ersetzt werden
FIX_UseSpecificCatch=Durch Multicatch mit spezifischen Exceptions ersetzen

DN_org.netbeans.modules.java.hints.jdk.ConvertToARM=Zu "try-with-resources" konvertieren
DESC_org.netbeans.modules.java.hints.jdk.ConvertToARM=Konvertiert einen try-finally-Block zu try-with-resources
TXT_ConvertToARM=Zu "try-with-resources" konvertieren

